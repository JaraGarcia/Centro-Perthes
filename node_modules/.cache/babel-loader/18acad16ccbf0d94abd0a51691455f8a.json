{"ast":null,"code":"// Load modules\n\nvar Hoek = require('hoek');\nvar Sntp = require('sntp');\nvar Boom = require('boom');\n\n// Declare internals\n\nvar internals = {};\n\n// Import Hoek Utilities\n\ninternals.import = function () {\n  for (var i in Hoek) {\n    if (Hoek.hasOwnProperty(i)) {\n      exports[i] = Hoek[i];\n    }\n  }\n};\ninternals.import();\n\n// Hawk version\n\nexports.version = function () {\n  return exports.loadPackage(__dirname + '/..').version;\n};\n\n// Extract host and port from request\n\nexports.parseHost = function (req, hostHeaderName) {\n  hostHeaderName = hostHeaderName ? hostHeaderName.toLowerCase() : 'host';\n  var hostHeader = req.headers[hostHeaderName];\n  if (!hostHeader) {\n    return null;\n  }\n  var hostHeaderRegex;\n  if (hostHeader[0] === '[') {\n    hostHeaderRegex = /^(?:(?:\\r\\n)?\\s)*(\\[[^\\]]+\\])(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$/; // IPv6\n  } else {\n    hostHeaderRegex = /^(?:(?:\\r\\n)?\\s)*([^:]+)(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$/; // IPv4, hostname\n  }\n\n  var hostParts = hostHeader.match(hostHeaderRegex);\n  if (!hostParts || hostParts.length !== 3 || !hostParts[1]) {\n    return null;\n  }\n  return {\n    name: hostParts[1],\n    port: hostParts[2] ? hostParts[2] : req.connection && req.connection.encrypted ? 443 : 80\n  };\n};\n\n// Parse Content-Type header content\n\nexports.parseContentType = function (header) {\n  if (!header) {\n    return '';\n  }\n  return header.split(';')[0].trim().toLowerCase();\n};\n\n// Convert node's  to request configuration object\n\nexports.parseRequest = function (req, options) {\n  if (!req.headers) {\n    return req;\n  }\n\n  // Obtain host and port information\n\n  if (!options.host || !options.port) {\n    var host = exports.parseHost(req, options.hostHeaderName);\n    if (!host) {\n      return new Error('Invalid Host header');\n    }\n  }\n  var request = {\n    method: req.method,\n    url: req.url,\n    host: options.host || host.name,\n    port: options.port || host.port,\n    authorization: req.headers.authorization,\n    contentType: req.headers['content-type'] || ''\n  };\n  return request;\n};\nexports.now = function () {\n  return Sntp.now();\n};\n\n// Parse Hawk HTTP Authorization header\n\nexports.parseAuthorizationHeader = function (header, keys) {\n  keys = keys || ['id', 'ts', 'nonce', 'hash', 'ext', 'mac', 'app', 'dlg'];\n  if (!header) {\n    return Boom.unauthorized(null, 'Hawk');\n  }\n  var headerParts = header.match(/^(\\w+)(?:\\s+(.*))?$/); // Header: scheme[ something]\n  if (!headerParts) {\n    return Boom.badRequest('Invalid header syntax');\n  }\n  var scheme = headerParts[1];\n  if (scheme.toLowerCase() !== 'hawk') {\n    return Boom.unauthorized(null, 'Hawk');\n  }\n  var attributesString = headerParts[2];\n  if (!attributesString) {\n    return Boom.badRequest('Invalid header syntax');\n  }\n  var attributes = {};\n  var errorMessage = '';\n  var verify = attributesString.replace(/(\\w+)=\"([^\"\\\\]*)\"\\s*(?:,\\s*|$)/g, function ($0, $1, $2) {\n    // Check valid attribute names\n\n    if (keys.indexOf($1) === -1) {\n      errorMessage = 'Unknown attribute: ' + $1;\n      return;\n    }\n\n    // Allowed attribute value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9\n\n    if ($2.match(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~]+$/) === null) {\n      errorMessage = 'Bad attribute value: ' + $1;\n      return;\n    }\n\n    // Check for duplicates\n\n    if (attributes.hasOwnProperty($1)) {\n      errorMessage = 'Duplicate attribute: ' + $1;\n      return;\n    }\n    attributes[$1] = $2;\n    return '';\n  });\n  if (verify !== '') {\n    return Boom.badRequest(errorMessage || 'Bad header format');\n  }\n  return attributes;\n};\nexports.unauthorized = function (message) {\n  return Boom.unauthorized(message, 'Hawk');\n};","map":{"version":3,"names":["Hoek","require","Sntp","Boom","internals","import","i","hasOwnProperty","exports","version","loadPackage","__dirname","parseHost","req","hostHeaderName","toLowerCase","hostHeader","headers","hostHeaderRegex","hostParts","match","length","name","port","connection","encrypted","parseContentType","header","split","trim","parseRequest","options","host","Error","request","method","url","authorization","contentType","now","parseAuthorizationHeader","keys","unauthorized","headerParts","badRequest","scheme","attributesString","attributes","errorMessage","verify","replace","$0","$1","$2","indexOf","message"],"sources":["/Users/jaraga/CodeOp/perthesclinica/node_modules/hawk/lib/utils.js"],"sourcesContent":["// Load modules\n\nvar Hoek = require('hoek');\nvar Sntp = require('sntp');\nvar Boom = require('boom');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Import Hoek Utilities\n\ninternals.import = function () {\n\n    for (var i in Hoek) {\n        if (Hoek.hasOwnProperty(i)) {\n            exports[i] = Hoek[i];\n        }\n    }\n};\n\ninternals.import();\n\n\n// Hawk version\n\nexports.version = function () {\n\n    return exports.loadPackage(__dirname + '/..').version;\n};\n\n\n// Extract host and port from request\n\nexports.parseHost = function (req, hostHeaderName) {\n\n    hostHeaderName = (hostHeaderName ? hostHeaderName.toLowerCase() : 'host');\n    var hostHeader = req.headers[hostHeaderName];\n    if (!hostHeader) {\n        return null;\n    }\n\n    var hostHeaderRegex;\n    if (hostHeader[0] === '[') {\n        hostHeaderRegex = /^(?:(?:\\r\\n)?\\s)*(\\[[^\\]]+\\])(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$/;      // IPv6\n    }\n    else {\n        hostHeaderRegex = /^(?:(?:\\r\\n)?\\s)*([^:]+)(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$/;           // IPv4, hostname\n    }\n    \n    var hostParts = hostHeader.match(hostHeaderRegex);\n\n    if (!hostParts ||\n        hostParts.length !== 3 ||\n        !hostParts[1]) {\n\n        return null;\n    }\n\n    return {\n        name: hostParts[1],\n        port: (hostParts[2] ? hostParts[2] : (req.connection && req.connection.encrypted ? 443 : 80))\n    };\n};\n\n\n// Parse Content-Type header content\n\nexports.parseContentType = function (header) {\n\n    if (!header) {\n        return '';\n    }\n\n    return header.split(';')[0].trim().toLowerCase();\n};\n\n\n// Convert node's  to request configuration object\n\nexports.parseRequest = function (req, options) {\n\n    if (!req.headers) {\n        return req;\n    }\n    \n    // Obtain host and port information\n\n    if (!options.host || !options.port) {\n        var host = exports.parseHost(req, options.hostHeaderName);\n        if (!host) {\n            return new Error('Invalid Host header');\n        }\n    }\n\n    var request = {\n        method: req.method,\n        url: req.url,\n        host: options.host || host.name,\n        port: options.port || host.port,\n        authorization: req.headers.authorization,\n        contentType: req.headers['content-type'] || ''\n    };\n\n    return request;\n};\n\n\nexports.now = function () {\n\n    return Sntp.now();\n};\n\n\n// Parse Hawk HTTP Authorization header\n\nexports.parseAuthorizationHeader = function (header, keys) {\n\n    keys = keys || ['id', 'ts', 'nonce', 'hash', 'ext', 'mac', 'app', 'dlg'];\n\n    if (!header) {\n        return Boom.unauthorized(null, 'Hawk');\n    }\n\n    var headerParts = header.match(/^(\\w+)(?:\\s+(.*))?$/);       // Header: scheme[ something]\n    if (!headerParts) {\n        return Boom.badRequest('Invalid header syntax');\n    }\n\n    var scheme = headerParts[1];\n    if (scheme.toLowerCase() !== 'hawk') {\n        return Boom.unauthorized(null, 'Hawk');\n    }\n\n    var attributesString = headerParts[2];\n    if (!attributesString) {\n        return Boom.badRequest('Invalid header syntax');\n    }\n\n    var attributes = {};\n    var errorMessage = '';\n    var verify = attributesString.replace(/(\\w+)=\"([^\"\\\\]*)\"\\s*(?:,\\s*|$)/g, function ($0, $1, $2) {\n\n        // Check valid attribute names\n\n        if (keys.indexOf($1) === -1) {\n            errorMessage = 'Unknown attribute: ' + $1;\n            return;\n        }\n\n        // Allowed attribute value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9\n\n        if ($2.match(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~]+$/) === null) {\n            errorMessage = 'Bad attribute value: ' + $1;\n            return;\n        }\n\n        // Check for duplicates\n\n        if (attributes.hasOwnProperty($1)) {\n            errorMessage = 'Duplicate attribute: ' + $1;\n            return;\n        }\n\n        attributes[$1] = $2;\n        return '';\n    });\n\n    if (verify !== '') {\n        return Boom.badRequest(errorMessage || 'Bad header format');\n    }\n\n    return attributes;\n};\n\n\nexports.unauthorized = function (message) {\n\n    return Boom.unauthorized(message, 'Hawk');\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}