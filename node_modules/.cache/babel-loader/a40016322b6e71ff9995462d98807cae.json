{"ast":null,"code":"// Load modules\n\nvar Url = require('url');\nvar Hoek = require('hoek');\nvar Cryptiles = require('cryptiles');\nvar Crypto = require('./crypto');\nvar Utils = require('./utils');\n\n// Declare internals\n\nvar internals = {};\n\n// Generate an Authorization header for a given request\n\n/*\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\n    method: HTTP verb (e.g. 'GET', 'POST')\n    options: {\n\n        // Required\n\n        credentials: {\n            id: 'dh37fgj492je',\n            key: 'aoijedoaijsdlaksjdl',\n            algorithm: 'sha256'                                 // 'sha1', 'sha256'\n        },\n\n        // Optional\n\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\n        timestamp: Date.now(),                              // A pre-calculated timestamp\n        nonce: '2334f34f',                                  // A pre-generated nonce\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n        payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\n        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\n        hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\n        app: '24s23423f34dx',                               // Oz application id\n        dlg: '234sz34tww3sd'                                // Oz delegated-by application id\n    }\n*/\n\nexports.header = function (uri, method, options) {\n  var result = {\n    field: '',\n    artifacts: {}\n  };\n\n  // Validate inputs\n\n  if (!uri || typeof uri !== 'string' && typeof uri !== 'object' || !method || typeof method !== 'string' || !options || typeof options !== 'object') {\n    return result;\n  }\n\n  // Application time\n\n  var timestamp = options.timestamp || Math.floor((Utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n  // Validate credentials\n\n  var credentials = options.credentials;\n  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n    // Invalid credential object\n    return result;\n  }\n  if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n    return result;\n  }\n\n  // Parse URI\n\n  if (typeof uri === 'string') {\n    uri = Url.parse(uri);\n  }\n\n  // Calculate signature\n\n  var artifacts = {\n    ts: timestamp,\n    nonce: options.nonce || Cryptiles.randomString(6),\n    method: method,\n    resource: uri.pathname + (uri.search || ''),\n    // Maintain trailing '?'\n    host: uri.hostname,\n    port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n    hash: options.hash,\n    ext: options.ext,\n    app: options.app,\n    dlg: options.dlg\n  };\n  result.artifacts = artifacts;\n\n  // Calculate payload hash\n\n  if (!artifacts.hash && options.hasOwnProperty('payload')) {\n    artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  }\n  var mac = Crypto.calculateMac('header', credentials, artifacts);\n\n  // Construct header\n\n  var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== ''; // Other falsey values allowed\n  var header = 'Hawk id=\"' + credentials.id + '\", ts=\"' + artifacts.ts + '\", nonce=\"' + artifacts.nonce + (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') + (hasExt ? '\", ext=\"' + Utils.escapeHeaderAttribute(artifacts.ext) : '') + '\", mac=\"' + mac + '\"';\n  if (artifacts.app) {\n    header += ', app=\"' + artifacts.app + (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n  }\n  result.field = header;\n  return result;\n};\n\n// Validate server response\n\n/*\n    res:        node's response object\n    artifacts:  object recieved from header().artifacts\n    options: {\n        payload:    optional payload received\n        required:   specifies if a Server-Authorization header is required. Defaults to 'false'\n    }\n*/\n\nexports.authenticate = function (res, credentials, artifacts, options) {\n  artifacts = Hoek.clone(artifacts);\n  options = options || {};\n  if (res.headers['www-authenticate']) {\n    // Parse HTTP WWW-Authenticate header\n\n    var attributes = Utils.parseAuthorizationHeader(res.headers['www-authenticate'], ['ts', 'tsm', 'error']);\n    if (attributes instanceof Error) {\n      return false;\n    }\n    if (attributes.ts) {\n      var tsm = Crypto.calculateTsMac(attributes.ts, credentials);\n      if (tsm !== attributes.tsm) {\n        return false;\n      }\n    }\n  }\n\n  // Parse HTTP Server-Authorization header\n\n  if (!res.headers['server-authorization'] && !options.required) {\n    return true;\n  }\n  var attributes = Utils.parseAuthorizationHeader(res.headers['server-authorization'], ['mac', 'ext', 'hash']);\n  if (attributes instanceof Error) {\n    return false;\n  }\n  artifacts.ext = attributes.ext;\n  artifacts.hash = attributes.hash;\n  var mac = Crypto.calculateMac('response', credentials, artifacts);\n  if (mac !== attributes.mac) {\n    return false;\n  }\n  if (!options.hasOwnProperty('payload')) {\n    return true;\n  }\n  if (!attributes.hash) {\n    return false;\n  }\n  var calculatedHash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, res.headers['content-type']);\n  return calculatedHash === attributes.hash;\n};\n\n// Generate a bewit value for a given URI\n\n/*\n * credentials is an object with the following keys: 'id, 'key', 'algorithm'.\n * options is an object with the following optional keys: 'ext', 'localtimeOffsetMsec'\n */\n/*\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\n    options: {\n\n        // Required\n\n        credentials: {\n            id: 'dh37fgj492je',\n            key: 'aoijedoaijsdlaksjdl',\n            algorithm: 'sha256'                             // 'sha1', 'sha256'\n        },\n        ttlSec: 60 * 60,                                    // TTL in seconds\n\n        // Optional\n\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\n        localtimeOffsetMsec: 400                            // Time offset to sync with server time\n    };\n*/\n\nexports.getBewit = function (uri, options) {\n  // Validate inputs\n\n  if (!uri || typeof uri !== 'string' && typeof uri !== 'object' || !options || typeof options !== 'object' || !options.ttlSec) {\n    return '';\n  }\n  options.ext = options.ext === null || options.ext === undefined ? '' : options.ext; // Zero is valid value\n\n  // Application time\n\n  var now = Utils.now() + (options.localtimeOffsetMsec || 0);\n\n  // Validate credentials\n\n  var credentials = options.credentials;\n  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n    return '';\n  }\n  if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n    return '';\n  }\n\n  // Parse URI\n\n  if (typeof uri === 'string') {\n    uri = Url.parse(uri);\n  }\n\n  // Calculate signature\n\n  var exp = Math.floor(now / 1000) + options.ttlSec;\n  var mac = Crypto.calculateMac('bewit', credentials, {\n    ts: exp,\n    nonce: '',\n    method: 'GET',\n    resource: uri.pathname + (uri.search || ''),\n    // Maintain trailing '?'\n    host: uri.hostname,\n    port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n    ext: options.ext\n  });\n\n  // Construct bewit: id\\exp\\mac\\ext\n\n  var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + options.ext;\n  return Utils.base64urlEncode(bewit);\n};\n\n// Generate an authorization string for a message\n\n/*\n    host: 'example.com',\n    port: 8000,\n    message: '{\"some\":\"payload\"}',                          // UTF-8 encoded string for body hash generation\n    options: {\n\n        // Required\n\n        credentials: {\n            id: 'dh37fgj492je',\n            key: 'aoijedoaijsdlaksjdl',\n            algorithm: 'sha256'                             // 'sha1', 'sha256'\n        },\n\n        // Optional\n\n        timestamp: Date.now(),                              // A pre-calculated timestamp\n        nonce: '2334f34f',                                  // A pre-generated nonce\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n    }\n*/\n\nexports.message = function (host, port, message, options) {\n  // Validate inputs\n\n  if (!host || typeof host !== 'string' || !port || typeof port !== 'number' || message === null || message === undefined || typeof message !== 'string' || !options || typeof options !== 'object') {\n    return null;\n  }\n\n  // Application time\n\n  var timestamp = options.timestamp || Math.floor((Utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n  // Validate credentials\n\n  var credentials = options.credentials;\n  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n    // Invalid credential object\n    return null;\n  }\n  if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n    return null;\n  }\n\n  // Calculate signature\n\n  var artifacts = {\n    ts: timestamp,\n    nonce: options.nonce || Cryptiles.randomString(6),\n    host: host,\n    port: port,\n    hash: Crypto.calculatePayloadHash(message, credentials.algorithm)\n  };\n\n  // Construct authorization\n\n  var result = {\n    id: credentials.id,\n    ts: artifacts.ts,\n    nonce: artifacts.nonce,\n    hash: artifacts.hash,\n    mac: Crypto.calculateMac('message', credentials, artifacts)\n  };\n  return result;\n};","map":{"version":3,"names":["Url","require","Hoek","Cryptiles","Crypto","Utils","internals","exports","header","uri","method","options","result","field","artifacts","timestamp","Math","floor","now","localtimeOffsetMsec","credentials","id","key","algorithm","algorithms","indexOf","parse","ts","nonce","randomString","resource","pathname","search","host","hostname","port","protocol","hash","ext","app","dlg","hasOwnProperty","calculatePayloadHash","payload","contentType","mac","calculateMac","hasExt","undefined","escapeHeaderAttribute","authenticate","res","clone","headers","attributes","parseAuthorizationHeader","Error","tsm","calculateTsMac","required","calculatedHash","getBewit","ttlSec","exp","bewit","base64urlEncode","message"],"sources":["/Users/jaraga/CodeOp/perthesclinica/node_modules/hawk/lib/client.js"],"sourcesContent":["// Load modules\n\nvar Url = require('url');\nvar Hoek = require('hoek');\nvar Cryptiles = require('cryptiles');\nvar Crypto = require('./crypto');\nvar Utils = require('./utils');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Generate an Authorization header for a given request\n\n/*\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\n    method: HTTP verb (e.g. 'GET', 'POST')\n    options: {\n\n        // Required\n\n        credentials: {\n            id: 'dh37fgj492je',\n            key: 'aoijedoaijsdlaksjdl',\n            algorithm: 'sha256'                                 // 'sha1', 'sha256'\n        },\n\n        // Optional\n\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\n        timestamp: Date.now(),                              // A pre-calculated timestamp\n        nonce: '2334f34f',                                  // A pre-generated nonce\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n        payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\n        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\n        hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\n        app: '24s23423f34dx',                               // Oz application id\n        dlg: '234sz34tww3sd'                                // Oz delegated-by application id\n    }\n*/\n\nexports.header = function (uri, method, options) {\n\n    var result = {\n        field: '',\n        artifacts: {}\n    };\n\n    // Validate inputs\n\n    if (!uri || (typeof uri !== 'string' && typeof uri !== 'object') ||\n        !method || typeof method !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        return result;\n    }\n\n    // Application time\n\n    var timestamp = options.timestamp || Math.floor((Utils.now() + (options.localtimeOffsetMsec || 0)) / 1000)\n\n    // Validate credentials\n\n    var credentials = options.credentials;\n    if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        // Invalid credential object\n        return result;\n    }\n\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n        return result;\n    }\n\n    // Parse URI\n\n    if (typeof uri === 'string') {\n        uri = Url.parse(uri);\n    }\n\n    // Calculate signature\n\n    var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || Cryptiles.randomString(6),\n        method: method,\n        resource: uri.pathname + (uri.search || ''),                            // Maintain trailing '?'\n        host: uri.hostname,\n        port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n        hash: options.hash,\n        ext: options.ext,\n        app: options.app,\n        dlg: options.dlg\n    };\n\n    result.artifacts = artifacts;\n\n    // Calculate payload hash\n\n    if (!artifacts.hash &&\n        options.hasOwnProperty('payload')) {\n\n        artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n    }\n\n    var mac = Crypto.calculateMac('header', credentials, artifacts);\n\n    // Construct header\n\n    var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n    var header = 'Hawk id=\"' + credentials.id +\n                 '\", ts=\"' + artifacts.ts +\n                 '\", nonce=\"' + artifacts.nonce +\n                 (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\n                 (hasExt ? '\", ext=\"' + Utils.escapeHeaderAttribute(artifacts.ext) : '') +\n                 '\", mac=\"' + mac + '\"';\n\n    if (artifacts.app) {\n        header += ', app=\"' + artifacts.app +\n                  (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n    }\n\n    result.field = header;\n\n    return result;\n};\n\n\n// Validate server response\n\n/*\n    res:        node's response object\n    artifacts:  object recieved from header().artifacts\n    options: {\n        payload:    optional payload received\n        required:   specifies if a Server-Authorization header is required. Defaults to 'false'\n    }\n*/\n\nexports.authenticate = function (res, credentials, artifacts, options) {\n\n    artifacts = Hoek.clone(artifacts);\n    options = options || {};\n\n    if (res.headers['www-authenticate']) {\n\n        // Parse HTTP WWW-Authenticate header\n\n        var attributes = Utils.parseAuthorizationHeader(res.headers['www-authenticate'], ['ts', 'tsm', 'error']);\n        if (attributes instanceof Error) {\n            return false;\n        }\n\n        if (attributes.ts) {\n            var tsm = Crypto.calculateTsMac(attributes.ts, credentials);\n            if (tsm !== attributes.tsm) {\n                return false;\n            }\n        }\n    }\n\n    // Parse HTTP Server-Authorization header\n\n    if (!res.headers['server-authorization'] &&\n        !options.required) {\n\n        return true;\n    }\n\n    var attributes = Utils.parseAuthorizationHeader(res.headers['server-authorization'], ['mac', 'ext', 'hash']);\n    if (attributes instanceof Error) {\n        return false;\n    }\n\n    artifacts.ext = attributes.ext;\n    artifacts.hash = attributes.hash;\n\n    var mac = Crypto.calculateMac('response', credentials, artifacts);\n    if (mac !== attributes.mac) {\n        return false;\n    }\n\n    if (!options.hasOwnProperty('payload')) {\n        return true;\n    }\n\n    if (!attributes.hash) {\n        return false;\n    }\n\n    var calculatedHash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, res.headers['content-type']);\n    return (calculatedHash === attributes.hash);\n};\n\n\n// Generate a bewit value for a given URI\n\n/*\n * credentials is an object with the following keys: 'id, 'key', 'algorithm'.\n * options is an object with the following optional keys: 'ext', 'localtimeOffsetMsec'\n */\n/*\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\n    options: {\n\n        // Required\n\n        credentials: {\n            id: 'dh37fgj492je',\n            key: 'aoijedoaijsdlaksjdl',\n            algorithm: 'sha256'                             // 'sha1', 'sha256'\n        },\n        ttlSec: 60 * 60,                                    // TTL in seconds\n\n        // Optional\n\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\n        localtimeOffsetMsec: 400                            // Time offset to sync with server time\n    };\n*/\n\nexports.getBewit = function (uri, options) {\n\n    // Validate inputs\n\n    if (!uri ||\n        (typeof uri !== 'string' && typeof uri !== 'object') ||\n        !options ||\n        typeof options !== 'object' ||\n        !options.ttlSec) {\n\n        return '';\n    }\n\n    options.ext = (options.ext === null || options.ext === undefined ? '' : options.ext);       // Zero is valid value\n\n    // Application time\n\n    var now = Utils.now() + (options.localtimeOffsetMsec || 0);\n\n    // Validate credentials\n\n    var credentials = options.credentials;\n    if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        return '';\n    }\n\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n        return '';\n    }\n\n    // Parse URI\n\n    if (typeof uri === 'string') {\n        uri = Url.parse(uri);\n    }\n\n    // Calculate signature\n\n    var exp = Math.floor(now / 1000) + options.ttlSec;\n    var mac = Crypto.calculateMac('bewit', credentials, {\n        ts: exp,\n        nonce: '',\n        method: 'GET',\n        resource: uri.pathname + (uri.search || ''),                            // Maintain trailing '?'\n        host: uri.hostname,\n        port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n        ext: options.ext\n    });\n\n    // Construct bewit: id\\exp\\mac\\ext\n\n    var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + options.ext;\n    return Utils.base64urlEncode(bewit);\n};\n\n\n// Generate an authorization string for a message\n\n/*\n    host: 'example.com',\n    port: 8000,\n    message: '{\"some\":\"payload\"}',                          // UTF-8 encoded string for body hash generation\n    options: {\n\n        // Required\n\n        credentials: {\n            id: 'dh37fgj492je',\n            key: 'aoijedoaijsdlaksjdl',\n            algorithm: 'sha256'                             // 'sha1', 'sha256'\n        },\n\n        // Optional\n\n        timestamp: Date.now(),                              // A pre-calculated timestamp\n        nonce: '2334f34f',                                  // A pre-generated nonce\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n    }\n*/\n\nexports.message = function (host, port, message, options) {\n\n    // Validate inputs\n\n    if (!host || typeof host !== 'string' ||\n        !port || typeof port !== 'number' ||\n        message === null || message === undefined || typeof message !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        return null;\n    }\n\n    // Application time\n\n    var timestamp = options.timestamp || Math.floor((Utils.now() + (options.localtimeOffsetMsec || 0)) / 1000)\n\n    // Validate credentials\n\n    var credentials = options.credentials;\n    if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        // Invalid credential object\n        return null;\n    }\n\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n        return null;\n    }\n\n    // Calculate signature\n\n    var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || Cryptiles.randomString(6),\n        host: host,\n        port: port,\n        hash: Crypto.calculatePayloadHash(message, credentials.algorithm)\n    };\n\n    // Construct authorization\n\n    var result = {\n        id: credentials.id,\n        ts: artifacts.ts,\n        nonce: artifacts.nonce,\n        hash: artifacts.hash,\n        mac: Crypto.calculateMac('message', credentials, artifacts)\n    };\n\n    return result;\n};\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}