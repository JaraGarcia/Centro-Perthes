{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nexports = module.exports = stringify;\nexports.getSerialize = serializer;\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);\n}\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [],\n    keys = [];\n  if (cycleReplacer == null) cycleReplacer = function (key, value) {\n    if (stack[0] === value) return \"[Circular ~]\";\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\";\n  };\n  return function (key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this);\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value);\n    } else stack.push(value);\n    return replacer == null ? value : replacer.call(this, key, value);\n  };\n}","map":{"version":3,"names":["exports","module","stringify","getSerialize","serializer","obj","replacer","spaces","cycleReplacer","JSON","stack","keys","key","value","slice","indexOf","join","length","thisPos","splice","push","Infinity","call"],"sources":["/Users/jaraga/CodeOp/perthesclinica/node_modules/json-stringify-safe/stringify.js"],"sourcesContent":["exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n"],"mappings":";AAAAA,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGE,SAAS;AACpCF,OAAO,CAACG,YAAY,GAAGC,UAAU;AAEjC,SAASF,SAAS,CAACG,GAAG,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,aAAa,EAAE;EACvD,OAAOC,IAAI,CAACP,SAAS,CAACG,GAAG,EAAED,UAAU,CAACE,QAAQ,EAAEE,aAAa,CAAC,EAAED,MAAM,CAAC;AACzE;AAEA,SAASH,UAAU,CAACE,QAAQ,EAAEE,aAAa,EAAE;EAC3C,IAAIE,KAAK,GAAG,EAAE;IAAEC,IAAI,GAAG,EAAE;EAEzB,IAAIH,aAAa,IAAI,IAAI,EAAEA,aAAa,GAAG,UAASI,GAAG,EAAEC,KAAK,EAAE;IAC9D,IAAIH,KAAK,CAAC,CAAC,CAAC,KAAKG,KAAK,EAAE,OAAO,cAAc;IAC7C,OAAO,cAAc,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAACK,OAAO,CAACF,KAAK,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;EAC7E,CAAC;EAED,OAAO,UAASJ,GAAG,EAAEC,KAAK,EAAE;IAC1B,IAAIH,KAAK,CAACO,MAAM,GAAG,CAAC,EAAE;MACpB,IAAIC,OAAO,GAAGR,KAAK,CAACK,OAAO,CAAC,IAAI,CAAC;MACjC,CAACG,OAAO,GAAGR,KAAK,CAACS,MAAM,CAACD,OAAO,GAAG,CAAC,CAAC,GAAGR,KAAK,CAACU,IAAI,CAAC,IAAI,CAAC;MACvD,CAACF,OAAO,GAAGP,IAAI,CAACQ,MAAM,CAACD,OAAO,EAAEG,QAAQ,EAAET,GAAG,CAAC,GAAGD,IAAI,CAACS,IAAI,CAACR,GAAG,CAAC;MAC/D,IAAI,CAACF,KAAK,CAACK,OAAO,CAACF,KAAK,CAAC,EAAEA,KAAK,GAAGL,aAAa,CAACc,IAAI,CAAC,IAAI,EAAEV,GAAG,EAAEC,KAAK,CAAC;IACzE,CAAC,MACIH,KAAK,CAACU,IAAI,CAACP,KAAK,CAAC;IAEtB,OAAOP,QAAQ,IAAI,IAAI,GAAGO,KAAK,GAAGP,QAAQ,CAACgB,IAAI,CAAC,IAAI,EAAEV,GAAG,EAAEC,KAAK,CAAC;EACnE,CAAC;AACH"},"metadata":{},"sourceType":"script"}