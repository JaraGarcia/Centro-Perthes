{"ast":null,"code":"// Load modules\n\nvar Dgram = require('dgram');\nvar Dns = require('dns');\nvar Hoek = require('hoek');\n\n// Declare internals\n\nvar internals = {};\nexports.time = function (options, callback) {\n  if (arguments.length !== 2) {\n    callback = arguments[0];\n    options = {};\n  }\n  var settings = Hoek.clone(options);\n  settings.host = settings.host || 'pool.ntp.org';\n  settings.port = settings.port || 123;\n  settings.resolveReference = settings.resolveReference || false;\n\n  // Declare variables used by callback\n\n  var timeoutId = 0;\n  var sent = 0;\n\n  // Ensure callback is only called once\n\n  var isFinished = false;\n  var finish = function (err, result) {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = 0;\n    }\n    if (!isFinished) {\n      isFinished = true;\n      socket.removeAllListeners();\n      socket.close();\n      return callback(err, result);\n    }\n  };\n\n  // Create UDP socket\n\n  var socket = Dgram.createSocket('udp4');\n  socket.once('error', function (err) {\n    return finish(err);\n  });\n\n  // Listen to incoming messages\n\n  socket.on('message', function (buffer, rinfo) {\n    var received = Date.now();\n    var message = new internals.NtpMessage(buffer);\n    if (!message.isValid) {\n      return finish(new Error('Invalid server response'), message);\n    }\n    if (message.originateTimestamp !== sent) {\n      return finish(new Error('Wrong originate timestamp'), message);\n    }\n\n    // Timestamp Name          ID   When Generated\n    // ------------------------------------------------------------\n    // Originate Timestamp     T1   time request sent by client\n    // Receive Timestamp       T2   time request received by server\n    // Transmit Timestamp      T3   time reply sent by server\n    // Destination Timestamp   T4   time reply received by client\n    //\n    // The roundtrip delay d and system clock offset t are defined as:\n    //\n    // d = (T4 - T1) - (T3 - T2)     t = ((T2 - T1) + (T3 - T4)) / 2\n\n    var T1 = message.originateTimestamp;\n    var T2 = message.receiveTimestamp;\n    var T3 = message.transmitTimestamp;\n    var T4 = received;\n    message.d = T4 - T1 - (T3 - T2);\n    message.t = (T2 - T1 + (T3 - T4)) / 2;\n    message.receivedLocally = received;\n    if (!settings.resolveReference || message.stratum !== 'secondary') {\n      return finish(null, message);\n    }\n\n    // Resolve reference IP address\n\n    Dns.reverse(message.referenceId, function (err, domains) {\n      if (!err) {\n        message.referenceHost = domains[0];\n      }\n      return finish(null, message);\n    });\n  });\n\n  // Set timeout\n\n  if (settings.timeout) {\n    timeoutId = setTimeout(function () {\n      timeoutId = 0;\n      return finish(new Error('Timeout'));\n    }, settings.timeout);\n  }\n\n  // Construct NTP message\n\n  var message = new Buffer(48);\n  for (var i = 0; i < 48; i++) {\n    // Zero message\n    message[i] = 0;\n  }\n  message[0] = (0 << 6) + (4 << 3) + (3 << 0); // Set version number to 4 and Mode to 3 (client)\n  sent = Date.now();\n  internals.fromMsecs(sent, message, 40); // Set transmit timestamp (returns as originate)\n\n  // Send NTP request\n\n  socket.send(message, 0, message.length, settings.port, settings.host, function (err, bytes) {\n    if (err || bytes !== 48) {\n      return finish(err || new Error('Could not send entire message'));\n    }\n  });\n};\ninternals.NtpMessage = function (buffer) {\n  this.isValid = false;\n\n  // Validate\n\n  if (buffer.length !== 48) {\n    return;\n  }\n\n  // Leap indicator\n\n  var li = buffer[0] >> 6;\n  switch (li) {\n    case 0:\n      this.leapIndicator = 'no-warning';\n      break;\n    case 1:\n      this.leapIndicator = 'last-minute-61';\n      break;\n    case 2:\n      this.leapIndicator = 'last-minute-59';\n      break;\n    case 3:\n      this.leapIndicator = 'alarm';\n      break;\n  }\n\n  // Version\n\n  var vn = (buffer[0] & 0x38) >> 3;\n  this.version = vn;\n\n  // Mode\n\n  var mode = buffer[0] & 0x7;\n  switch (mode) {\n    case 1:\n      this.mode = 'symmetric-active';\n      break;\n    case 2:\n      this.mode = 'symmetric-passive';\n      break;\n    case 3:\n      this.mode = 'client';\n      break;\n    case 4:\n      this.mode = 'server';\n      break;\n    case 5:\n      this.mode = 'broadcast';\n      break;\n    case 0:\n    case 6:\n    case 7:\n      this.mode = 'reserved';\n      break;\n  }\n\n  // Stratum\n\n  var stratum = buffer[1];\n  if (stratum === 0) {\n    this.stratum = 'death';\n  } else if (stratum === 1) {\n    this.stratum = 'primary';\n  } else if (stratum <= 15) {\n    this.stratum = 'secondary';\n  } else {\n    this.stratum = 'reserved';\n  }\n\n  // Poll interval (msec)\n\n  this.pollInterval = Math.round(Math.pow(2, buffer[2])) * 1000;\n\n  // Precision (msecs)\n\n  this.precision = Math.pow(2, buffer[3]) * 1000;\n\n  // Root delay (msecs)\n\n  var rootDelay = 256 * (256 * (256 * buffer[4] + buffer[5]) + buffer[6]) + buffer[7];\n  this.rootDelay = 1000 * (rootDelay / 0x10000);\n\n  // Root dispersion (msecs)\n\n  this.rootDispersion = ((buffer[8] << 8) + buffer[9] + ((buffer[10] << 8) + buffer[11]) / Math.pow(2, 16)) * 1000;\n\n  // Reference identifier\n\n  this.referenceId = '';\n  switch (this.stratum) {\n    case 'death':\n    case 'primary':\n      this.referenceId = String.fromCharCode(buffer[12]) + String.fromCharCode(buffer[13]) + String.fromCharCode(buffer[14]) + String.fromCharCode(buffer[15]);\n      break;\n    case 'secondary':\n      this.referenceId = '' + buffer[12] + '.' + buffer[13] + '.' + buffer[14] + '.' + buffer[15];\n      break;\n  }\n\n  // Reference timestamp\n\n  this.referenceTimestamp = internals.toMsecs(buffer, 16);\n\n  // Originate timestamp\n\n  this.originateTimestamp = internals.toMsecs(buffer, 24);\n\n  // Receive timestamp\n\n  this.receiveTimestamp = internals.toMsecs(buffer, 32);\n\n  // Transmit timestamp\n\n  this.transmitTimestamp = internals.toMsecs(buffer, 40);\n\n  // Validate\n\n  if (this.version === 4 && this.stratum !== 'reserved' && this.mode === 'server' && this.originateTimestamp && this.receiveTimestamp && this.transmitTimestamp) {\n    this.isValid = true;\n  }\n  return this;\n};\ninternals.toMsecs = function (buffer, offset) {\n  var seconds = 0;\n  var fraction = 0;\n  for (var i = 0; i < 4; ++i) {\n    seconds = seconds * 256 + buffer[offset + i];\n  }\n  for (i = 4; i < 8; ++i) {\n    fraction = fraction * 256 + buffer[offset + i];\n  }\n  return (seconds - 2208988800 + fraction / Math.pow(2, 32)) * 1000;\n};\ninternals.fromMsecs = function (ts, buffer, offset) {\n  var seconds = Math.floor(ts / 1000) + 2208988800;\n  var fraction = Math.round(ts % 1000 / 1000 * Math.pow(2, 32));\n  buffer[offset + 0] = (seconds & 0xFF000000) >> 24;\n  buffer[offset + 1] = (seconds & 0x00FF0000) >> 16;\n  buffer[offset + 2] = (seconds & 0x0000FF00) >> 8;\n  buffer[offset + 3] = seconds & 0x000000FF;\n  buffer[offset + 4] = (fraction & 0xFF000000) >> 24;\n  buffer[offset + 5] = (fraction & 0x00FF0000) >> 16;\n  buffer[offset + 6] = (fraction & 0x0000FF00) >> 8;\n  buffer[offset + 7] = fraction & 0x000000FF;\n};\n\n// Offset singleton\n\ninternals.last = {\n  offset: 0,\n  expires: 0,\n  host: '',\n  port: 0\n};\nexports.offset = function (options, callback) {\n  if (arguments.length !== 2) {\n    callback = arguments[0];\n    options = {};\n  }\n  var now = Date.now();\n  var clockSyncRefresh = options.clockSyncRefresh || 24 * 60 * 60 * 1000; // Daily\n\n  if (internals.last.offset && internals.last.host === options.host && internals.last.port === options.port && now < internals.last.expires) {\n    process.nextTick(function () {\n      callback(null, internals.last.offset);\n    });\n    return;\n  }\n  exports.time(options, function (err, time) {\n    if (err) {\n      return callback(err, 0);\n    }\n    internals.last = {\n      offset: Math.round(time.t),\n      expires: now + clockSyncRefresh,\n      host: options.host,\n      port: options.port\n    };\n    return callback(null, internals.last.offset);\n  });\n};\n\n// Now singleton\n\ninternals.now = {\n  intervalId: 0\n};\nexports.start = function (options, callback) {\n  if (arguments.length !== 2) {\n    callback = arguments[0];\n    options = {};\n  }\n  if (internals.now.intervalId) {\n    process.nextTick(function () {\n      callback();\n    });\n    return;\n  }\n  exports.offset(options, function (err, offset) {\n    internals.now.intervalId = setInterval(function () {\n      exports.offset(options, function () {});\n    }, options.clockSyncRefresh || 24 * 60 * 60 * 1000); // Daily\n\n    return callback();\n  });\n};\nexports.stop = function () {\n  if (!internals.now.intervalId) {\n    return;\n  }\n  clearInterval(internals.now.intervalId);\n  internals.now.intervalId = 0;\n};\nexports.isLive = function () {\n  return !!internals.now.intervalId;\n};\nexports.now = function () {\n  var now = Date.now();\n  if (!exports.isLive() || now >= internals.last.expires) {\n    return now;\n  }\n  return now + internals.last.offset;\n};","map":{"version":3,"names":["Dgram","require","Dns","Hoek","internals","exports","time","options","callback","arguments","length","settings","clone","host","port","resolveReference","timeoutId","sent","isFinished","finish","err","result","clearTimeout","socket","removeAllListeners","close","createSocket","once","on","buffer","rinfo","received","Date","now","message","NtpMessage","isValid","Error","originateTimestamp","T1","T2","receiveTimestamp","T3","transmitTimestamp","T4","d","t","receivedLocally","stratum","reverse","referenceId","domains","referenceHost","timeout","setTimeout","Buffer","i","fromMsecs","send","bytes","li","leapIndicator","vn","version","mode","pollInterval","Math","round","pow","precision","rootDelay","rootDispersion","String","fromCharCode","referenceTimestamp","toMsecs","offset","seconds","fraction","ts","floor","last","expires","clockSyncRefresh","process","nextTick","intervalId","start","setInterval","stop","clearInterval","isLive"],"sources":["/Users/jaraga/CodeOp/perthesclinica/node_modules/sntp/lib/index.js"],"sourcesContent":["// Load modules\n\nvar Dgram = require('dgram');\nvar Dns = require('dns');\nvar Hoek = require('hoek');\n\n\n// Declare internals\n\nvar internals = {};\n\n\nexports.time = function (options, callback) {\n\n    if (arguments.length !== 2) {\n        callback = arguments[0];\n        options = {};\n    }\n\n    var settings = Hoek.clone(options);\n    settings.host = settings.host || 'pool.ntp.org';\n    settings.port = settings.port || 123;\n    settings.resolveReference = settings.resolveReference || false;\n\n    // Declare variables used by callback\n\n    var timeoutId = 0;\n    var sent = 0;\n\n    // Ensure callback is only called once\n\n    var isFinished = false;\n    var finish = function (err, result) {\n\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n            timeoutId = 0;\n        }\n\n        if (!isFinished) {\n            isFinished = true;\n            socket.removeAllListeners();\n            socket.close();\n            return callback(err, result);\n        }\n    };\n\n    // Create UDP socket\n\n    var socket = Dgram.createSocket('udp4');\n\n    socket.once('error', function (err) {\n\n        return finish(err);\n    });\n\n    // Listen to incoming messages\n\n    socket.on('message', function (buffer, rinfo) {\n\n        var received = Date.now();\n\n        var message = new internals.NtpMessage(buffer);\n        if (!message.isValid) {\n            return finish(new Error('Invalid server response'), message);\n        }\n\n        if (message.originateTimestamp !== sent) {\n            return finish(new Error('Wrong originate timestamp'), message);\n        }\n\n        // Timestamp Name          ID   When Generated\n        // ------------------------------------------------------------\n        // Originate Timestamp     T1   time request sent by client\n        // Receive Timestamp       T2   time request received by server\n        // Transmit Timestamp      T3   time reply sent by server\n        // Destination Timestamp   T4   time reply received by client\n        //\n        // The roundtrip delay d and system clock offset t are defined as:\n        //\n        // d = (T4 - T1) - (T3 - T2)     t = ((T2 - T1) + (T3 - T4)) / 2\n\n        var T1 = message.originateTimestamp;\n        var T2 = message.receiveTimestamp;\n        var T3 = message.transmitTimestamp;\n        var T4 = received;\n\n        message.d = (T4 - T1) - (T3 - T2);\n        message.t = ((T2 - T1) + (T3 - T4)) / 2;\n        message.receivedLocally = received;\n\n        if (!settings.resolveReference ||\n            message.stratum !== 'secondary') {\n\n            return finish(null, message);\n        }\n\n        // Resolve reference IP address\n\n        Dns.reverse(message.referenceId, function (err, domains) {\n\n            if (!err) {\n                message.referenceHost = domains[0];\n            }\n\n            return finish(null, message);\n        });\n    });\n\n    // Set timeout\n\n    if (settings.timeout) {\n        timeoutId = setTimeout(function () {\n\n            timeoutId = 0;\n            return finish(new Error('Timeout'));\n        }, settings.timeout);\n    }\n\n    // Construct NTP message\n\n    var message = new Buffer(48);\n    for (var i = 0; i < 48; i++) {                      // Zero message\n        message[i] = 0;\n    }\n\n    message[0] = (0 << 6) + (4 << 3) + (3 << 0)         // Set version number to 4 and Mode to 3 (client)\n    sent = Date.now();\n    internals.fromMsecs(sent, message, 40);               // Set transmit timestamp (returns as originate)\n\n    // Send NTP request\n\n    socket.send(message, 0, message.length, settings.port, settings.host, function (err, bytes) {\n\n        if (err ||\n            bytes !== 48) {\n\n            return finish(err || new Error('Could not send entire message'));\n        }\n    });\n};\n\n\ninternals.NtpMessage = function (buffer) {\n\n    this.isValid = false;\n\n    // Validate\n\n    if (buffer.length !== 48) {\n        return;\n    }\n\n    // Leap indicator\n\n    var li = (buffer[0] >> 6);\n    switch (li) {\n        case 0: this.leapIndicator = 'no-warning'; break;\n        case 1: this.leapIndicator = 'last-minute-61'; break;\n        case 2: this.leapIndicator = 'last-minute-59'; break;\n        case 3: this.leapIndicator = 'alarm'; break;\n    }\n\n    // Version\n\n    var vn = ((buffer[0] & 0x38) >> 3);\n    this.version = vn;\n\n    // Mode\n\n    var mode = (buffer[0] & 0x7);\n    switch (mode) {\n        case 1: this.mode = 'symmetric-active'; break;\n        case 2: this.mode = 'symmetric-passive'; break;\n        case 3: this.mode = 'client'; break;\n        case 4: this.mode = 'server'; break;\n        case 5: this.mode = 'broadcast'; break;\n        case 0:\n        case 6:\n        case 7: this.mode = 'reserved'; break;\n    }\n\n    // Stratum\n\n    var stratum = buffer[1];\n    if (stratum === 0) {\n        this.stratum = 'death';\n    }\n    else if (stratum === 1) {\n        this.stratum = 'primary';\n    }\n    else if (stratum <= 15) {\n        this.stratum = 'secondary';\n    }\n    else {\n        this.stratum = 'reserved';\n    }\n\n    // Poll interval (msec)\n\n    this.pollInterval = Math.round(Math.pow(2, buffer[2])) * 1000;\n\n    // Precision (msecs)\n\n    this.precision = Math.pow(2, buffer[3]) * 1000;\n\n    // Root delay (msecs)\n\n    var rootDelay = 256 * (256 * (256 * buffer[4] + buffer[5]) + buffer[6]) + buffer[7];\n    this.rootDelay = 1000 * (rootDelay / 0x10000);\n\n    // Root dispersion (msecs)\n\n    this.rootDispersion = ((buffer[8] << 8) + buffer[9] + ((buffer[10] << 8) + buffer[11]) / Math.pow(2, 16)) * 1000;\n\n    // Reference identifier\n\n    this.referenceId = '';\n    switch (this.stratum) {\n        case 'death':\n        case 'primary':\n            this.referenceId = String.fromCharCode(buffer[12]) + String.fromCharCode(buffer[13]) + String.fromCharCode(buffer[14]) + String.fromCharCode(buffer[15]);\n            break;\n        case 'secondary':\n            this.referenceId = '' + buffer[12] + '.' + buffer[13] + '.' + buffer[14] + '.' + buffer[15];\n            break;\n    }\n\n    // Reference timestamp\n\n    this.referenceTimestamp = internals.toMsecs(buffer, 16);\n\n    // Originate timestamp\n\n    this.originateTimestamp = internals.toMsecs(buffer, 24);\n\n    // Receive timestamp\n\n    this.receiveTimestamp = internals.toMsecs(buffer, 32);\n\n    // Transmit timestamp\n\n    this.transmitTimestamp = internals.toMsecs(buffer, 40);\n\n    // Validate\n\n    if (this.version === 4 &&\n        this.stratum !== 'reserved' &&\n        this.mode === 'server' &&\n        this.originateTimestamp &&\n        this.receiveTimestamp &&\n        this.transmitTimestamp) {\n\n        this.isValid = true;\n    }\n\n    return this;\n};\n\n\ninternals.toMsecs = function (buffer, offset) {\n\n    var seconds = 0;\n    var fraction = 0;\n\n    for (var i = 0; i < 4; ++i) {\n        seconds = (seconds * 256) + buffer[offset + i];\n    }\n\n    for (i = 4; i < 8; ++i) {\n        fraction = (fraction * 256) + buffer[offset + i];\n    }\n\n    return ((seconds - 2208988800 + (fraction / Math.pow(2, 32))) * 1000);\n};\n\n\ninternals.fromMsecs = function (ts, buffer, offset) {\n\n    var seconds = Math.floor(ts / 1000) + 2208988800;\n    var fraction = Math.round((ts % 1000) / 1000 * Math.pow(2, 32));\n\n    buffer[offset + 0] = (seconds & 0xFF000000) >> 24;\n    buffer[offset + 1] = (seconds & 0x00FF0000) >> 16;\n    buffer[offset + 2] = (seconds & 0x0000FF00) >> 8;\n    buffer[offset + 3] = (seconds & 0x000000FF);\n\n    buffer[offset + 4] = (fraction & 0xFF000000) >> 24;\n    buffer[offset + 5] = (fraction & 0x00FF0000) >> 16;\n    buffer[offset + 6] = (fraction & 0x0000FF00) >> 8;\n    buffer[offset + 7] = (fraction & 0x000000FF);\n};\n\n\n// Offset singleton\n\ninternals.last = {\n    offset: 0,\n    expires: 0,\n    host: '',\n    port: 0\n};\n\n\nexports.offset = function (options, callback) {\n\n    if (arguments.length !== 2) {\n        callback = arguments[0];\n        options = {};\n    }\n\n    var now = Date.now();\n    var clockSyncRefresh = options.clockSyncRefresh || 24 * 60 * 60 * 1000;                    // Daily\n\n    if (internals.last.offset &&\n        internals.last.host === options.host &&\n        internals.last.port === options.port &&\n        now < internals.last.expires) {\n\n        process.nextTick(function () {\n                \n            callback(null, internals.last.offset);\n        });\n\n        return;\n    }\n\n    exports.time(options, function (err, time) {\n\n        if (err) {\n            return callback(err, 0);\n        }\n\n        internals.last = {\n            offset: Math.round(time.t),\n            expires: now + clockSyncRefresh,\n            host: options.host,\n            port: options.port\n        };\n\n        return callback(null, internals.last.offset);\n    });\n};\n\n\n// Now singleton\n\ninternals.now = {\n    intervalId: 0\n};\n\n\nexports.start = function (options, callback) {\n\n    if (arguments.length !== 2) {\n        callback = arguments[0];\n        options = {};\n    }\n\n    if (internals.now.intervalId) {\n        process.nextTick(function () {\n            \n            callback();\n        });\n        \n        return;\n    }\n\n    exports.offset(options, function (err, offset) {\n\n        internals.now.intervalId = setInterval(function () {\n\n            exports.offset(options, function () { });\n        }, options.clockSyncRefresh || 24 * 60 * 60 * 1000);                                // Daily\n\n        return callback();\n    });\n};\n\n\nexports.stop = function () {\n\n    if (!internals.now.intervalId) {\n        return;\n    }\n\n    clearInterval(internals.now.intervalId);\n    internals.now.intervalId = 0;\n};\n\n\nexports.isLive = function () {\n\n    return !!internals.now.intervalId;\n};\n\n\nexports.now = function () {\n\n    var now = Date.now();\n    if (!exports.isLive() ||\n        now >= internals.last.expires) {\n\n        return now;\n    }\n\n    return now + internals.last.offset;\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}