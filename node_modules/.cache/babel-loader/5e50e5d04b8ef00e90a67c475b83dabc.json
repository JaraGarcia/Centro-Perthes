{"ast":null,"code":"// Load modules\n\nvar Crypto = require('crypto');\nvar Url = require('url');\nvar Utils = require('./utils');\n\n// Declare internals\n\nvar internals = {};\n\n// MAC normalization format version\n\nexports.headerVersion = '1'; // Prevent comparison of mac values generated with different normalized string formats\n\n// Supported HMAC algorithms\n\nexports.algorithms = ['sha1', 'sha256'];\n\n// Calculate the request MAC\n\n/*\n    type: 'header',                                 // 'header', 'bewit', 'response'\n    credentials: {\n        key: 'aoijedoaijsdlaksjdl',\n        algorithm: 'sha256'                         // 'sha1', 'sha256'\n    },\n    options: {\n        method: 'GET',\n        resource: '/resource?a=1&b=2',\n        host: 'example.com',\n        port: 8080,\n        ts: 1357718381034,\n        nonce: 'd3d345f',\n        hash: 'U4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=',\n        ext: 'app-specific-data',\n        app: 'hf48hd83qwkj',                        // Application id (Oz)\n        dlg: 'd8djwekds9cj'                         // Delegated by application id (Oz), requires options.app\n    }\n*/\n\nexports.calculateMac = function (type, credentials, options) {\n  var normalized = exports.generateNormalizedString(type, options);\n  var hmac = Crypto.createHmac(credentials.algorithm, credentials.key).update(normalized);\n  var digest = hmac.digest('base64');\n  return digest;\n};\nexports.generateNormalizedString = function (type, options) {\n  var normalized = 'hawk.' + exports.headerVersion + '.' + type + '\\n' + options.ts + '\\n' + options.nonce + '\\n' + (options.method || '').toUpperCase() + '\\n' + (options.resource || '') + '\\n' + options.host.toLowerCase() + '\\n' + options.port + '\\n' + (options.hash || '') + '\\n';\n  if (options.ext) {\n    normalized += options.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n');\n  }\n  normalized += '\\n';\n  if (options.app) {\n    normalized += options.app + '\\n' + (options.dlg || '') + '\\n';\n  }\n  return normalized;\n};\nexports.calculatePayloadHash = function (payload, algorithm, contentType) {\n  var hash = exports.initializePayloadHash(algorithm, contentType);\n  hash.update(payload || '');\n  return exports.finalizePayloadHash(hash);\n};\nexports.initializePayloadHash = function (algorithm, contentType) {\n  var hash = Crypto.createHash(algorithm);\n  hash.update('hawk.' + exports.headerVersion + '.payload\\n');\n  hash.update(Utils.parseContentType(contentType) + '\\n');\n  return hash;\n};\nexports.finalizePayloadHash = function (hash) {\n  hash.update('\\n');\n  return hash.digest('base64');\n};\nexports.calculateTsMac = function (ts, credentials) {\n  var hmac = Crypto.createHmac(credentials.algorithm, credentials.key);\n  hmac.update('hawk.' + exports.headerVersion + '.ts\\n' + ts + '\\n');\n  return hmac.digest('base64');\n};","map":{"version":3,"names":["Crypto","require","Url","Utils","internals","exports","headerVersion","algorithms","calculateMac","type","credentials","options","normalized","generateNormalizedString","hmac","createHmac","algorithm","key","update","digest","ts","nonce","method","toUpperCase","resource","host","toLowerCase","port","hash","ext","replace","app","dlg","calculatePayloadHash","payload","contentType","initializePayloadHash","finalizePayloadHash","createHash","parseContentType","calculateTsMac"],"sources":["/Users/jaraga/CodeOp/perthesclinica/node_modules/hawk/lib/crypto.js"],"sourcesContent":["// Load modules\n\nvar Crypto = require('crypto');\nvar Url = require('url');\nvar Utils = require('./utils');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// MAC normalization format version\n\nexports.headerVersion = '1';                        // Prevent comparison of mac values generated with different normalized string formats\n\n\n// Supported HMAC algorithms\n\nexports.algorithms = ['sha1', 'sha256'];\n\n\n// Calculate the request MAC\n\n/*\n    type: 'header',                                 // 'header', 'bewit', 'response'\n    credentials: {\n        key: 'aoijedoaijsdlaksjdl',\n        algorithm: 'sha256'                         // 'sha1', 'sha256'\n    },\n    options: {\n        method: 'GET',\n        resource: '/resource?a=1&b=2',\n        host: 'example.com',\n        port: 8080,\n        ts: 1357718381034,\n        nonce: 'd3d345f',\n        hash: 'U4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=',\n        ext: 'app-specific-data',\n        app: 'hf48hd83qwkj',                        // Application id (Oz)\n        dlg: 'd8djwekds9cj'                         // Delegated by application id (Oz), requires options.app\n    }\n*/\n\nexports.calculateMac = function (type, credentials, options) {\n\n    var normalized = exports.generateNormalizedString(type, options);\n\n    var hmac = Crypto.createHmac(credentials.algorithm, credentials.key).update(normalized);\n    var digest = hmac.digest('base64');\n    return digest;\n};\n\n\nexports.generateNormalizedString = function (type, options) {\n\n    var normalized = 'hawk.' + exports.headerVersion + '.' + type + '\\n' +\n                     options.ts + '\\n' +\n                     options.nonce + '\\n' +\n                     (options.method || '').toUpperCase() + '\\n' +\n                     (options.resource || '') + '\\n' +\n                     options.host.toLowerCase() + '\\n' +\n                     options.port + '\\n' +\n                     (options.hash || '') + '\\n';\n\n    if (options.ext) {\n        normalized += options.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n');\n    }\n\n    normalized += '\\n';\n\n    if (options.app) {\n        normalized += options.app + '\\n' +\n                      (options.dlg || '') + '\\n';\n    }\n\n    return normalized;\n};\n\n\nexports.calculatePayloadHash = function (payload, algorithm, contentType) {\n\n    var hash = exports.initializePayloadHash(algorithm, contentType);\n    hash.update(payload || '');\n    return exports.finalizePayloadHash(hash);\n};\n\n\nexports.initializePayloadHash = function (algorithm, contentType) {\n\n    var hash = Crypto.createHash(algorithm);\n    hash.update('hawk.' + exports.headerVersion + '.payload\\n');\n    hash.update(Utils.parseContentType(contentType) + '\\n');\n    return hash;\n};\n\n\nexports.finalizePayloadHash = function (hash) {\n\n    hash.update('\\n');\n    return hash.digest('base64');\n};\n\n\nexports.calculateTsMac = function (ts, credentials) {\n\n    var hmac = Crypto.createHmac(credentials.algorithm, credentials.key);\n    hmac.update('hawk.' + exports.headerVersion + '.ts\\n' + ts + '\\n');\n    return hmac.digest('base64');\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}