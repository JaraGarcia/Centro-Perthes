{"ast":null,"code":"#!/usr/bin/env node\nrequire(\"core-js/modules/es.array.push.js\");\nvar request = require('request');\nvar stream = require('stream-wrapper');\nmodule.exports = function (query, opts) {\n  if (!opts) opts = {};\n  var marker = opts.marker || '';\n  var username = opts.username || '';\n  var buffer = [];\n  var self = stream.readable({\n    objectMode: true,\n    highWaterMark: 1\n  }, function () {\n    if (self.destroyed) return;\n    if (buffer.length) return self.push(buffer.shift());\n    request('http://node-modules.com/search.json', {\n      qs: {\n        q: query,\n        u: username,\n        marker: marker\n      },\n      json: true\n    }, function (err, response) {\n      if (err) return self.emit('error', err);\n      if (!response.body.length) return self.push(null);\n      response.body.forEach(function (data) {\n        buffer.push(data);\n        marker = data.marker;\n      });\n      self.push(buffer.shift());\n    });\n  });\n  return self;\n};","map":{"version":3,"names":["request","require","stream","module","exports","query","opts","marker","username","buffer","self","readable","objectMode","highWaterMark","destroyed","length","push","shift","qs","q","u","json","err","response","emit","body","forEach","data"],"sources":["/Users/jaraga/CodeOp/perthesclinica/node_modules/node-modules/index.js"],"sourcesContent":["#!/usr/bin/env node\n\nvar request = require('request');\nvar stream = require('stream-wrapper');\n\nmodule.exports = function(query, opts) {\n\tif (!opts) opts = {};\n\n\tvar marker = opts.marker || '';\n\tvar username = opts.username || '';\n\n\tvar buffer = [];\n\tvar self = stream.readable({objectMode:true, highWaterMark:1}, function() {\n\t\tif (self.destroyed) return;\n\t\tif (buffer.length) return self.push(buffer.shift());\n\n\t\trequest('http://node-modules.com/search.json', {\n\t\t\tqs: {\n\t\t\t\tq: query,\n\t\t\t\tu: username,\n\t\t\t\tmarker: marker\n\t\t\t},\n\t\t\tjson:true,\n\t\t}, function(err, response) {\n\t\t\tif (err) return self.emit('error', err);\n\t\t\tif (!response.body.length) return self.push(null);\n\n\t\t\tresponse.body.forEach(function(data) {\n\t\t\t\tbuffer.push(data);\n\t\t\t\tmarker = data.marker;\n\t\t\t});\n\t\t\tself.push(buffer.shift());\n\t\t});\n\t});\n\n\treturn self;\n};\n"],"mappings":"AAAA;AAAmB;AAEnB,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIC,MAAM,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAEtCE,MAAM,CAACC,OAAO,GAAG,UAASC,KAAK,EAAEC,IAAI,EAAE;EACtC,IAAI,CAACA,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EAEpB,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM,IAAI,EAAE;EAC9B,IAAIC,QAAQ,GAAGF,IAAI,CAACE,QAAQ,IAAI,EAAE;EAElC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,IAAI,GAAGR,MAAM,CAACS,QAAQ,CAAC;IAACC,UAAU,EAAC,IAAI;IAAEC,aAAa,EAAC;EAAC,CAAC,EAAE,YAAW;IACzE,IAAIH,IAAI,CAACI,SAAS,EAAE;IACpB,IAAIL,MAAM,CAACM,MAAM,EAAE,OAAOL,IAAI,CAACM,IAAI,CAACP,MAAM,CAACQ,KAAK,EAAE,CAAC;IAEnDjB,OAAO,CAAC,qCAAqC,EAAE;MAC9CkB,EAAE,EAAE;QACHC,CAAC,EAAEd,KAAK;QACRe,CAAC,EAAEZ,QAAQ;QACXD,MAAM,EAAEA;MACT,CAAC;MACDc,IAAI,EAAC;IACN,CAAC,EAAE,UAASC,GAAG,EAAEC,QAAQ,EAAE;MAC1B,IAAID,GAAG,EAAE,OAAOZ,IAAI,CAACc,IAAI,CAAC,OAAO,EAAEF,GAAG,CAAC;MACvC,IAAI,CAACC,QAAQ,CAACE,IAAI,CAACV,MAAM,EAAE,OAAOL,IAAI,CAACM,IAAI,CAAC,IAAI,CAAC;MAEjDO,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,UAASC,IAAI,EAAE;QACpClB,MAAM,CAACO,IAAI,CAACW,IAAI,CAAC;QACjBpB,MAAM,GAAGoB,IAAI,CAACpB,MAAM;MACrB,CAAC,CAAC;MACFG,IAAI,CAACM,IAAI,CAACP,MAAM,CAACQ,KAAK,EAAE,CAAC;IAC1B,CAAC,CAAC;EACH,CAAC,CAAC;EAEF,OAAOP,IAAI;AACZ,CAAC"},"metadata":{},"sourceType":"script"}