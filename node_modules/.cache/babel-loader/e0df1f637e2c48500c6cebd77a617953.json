{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nutil.inherits(Duplex, Readable);\nforEach(objectKeys(Writable.prototype), function (method) {\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n});\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  if (options && options.readable === false) this.readable = false;\n  if (options && options.writable === false) this.writable = false;\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}","map":{"version":3,"names":["module","exports","Duplex","objectKeys","Object","keys","obj","key","push","util","require","inherits","Readable","Writable","forEach","prototype","method","options","call","readable","writable","allowHalfOpen","once","onend","_writableState","ended","process","nextTick","end","bind","xs","f","i","l","length"],"sources":["/Users/jaraga/CodeOp/perthesclinica/node_modules/stream-wrapper/node_modules/readable-stream/lib/_stream_duplex.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAGC,MAAM;;AAEvB;AACA,IAAIC,UAAU,GAAGC,MAAM,CAACC,IAAI,IAAI,UAAUC,GAAG,EAAE;EAC7C,IAAID,IAAI,GAAG,EAAE;EACb,KAAK,IAAIE,GAAG,IAAID,GAAG,EAAED,IAAI,CAACG,IAAI,CAACD,GAAG,CAAC;EACnC,OAAOF,IAAI;AACb,CAAC;AACD;;AAGA;AACA,IAAII,IAAI,GAAGC,OAAO,CAAC,cAAc,CAAC;AAClCD,IAAI,CAACE,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACnC;;AAEA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC5C,IAAIG,QAAQ,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAE5CD,IAAI,CAACE,QAAQ,CAACT,MAAM,EAAEU,QAAQ,CAAC;AAE/BE,OAAO,CAACX,UAAU,CAACU,QAAQ,CAACE,SAAS,CAAC,EAAE,UAASC,MAAM,EAAE;EACvD,IAAI,CAACd,MAAM,CAACa,SAAS,CAACC,MAAM,CAAC,EAC3Bd,MAAM,CAACa,SAAS,CAACC,MAAM,CAAC,GAAGH,QAAQ,CAACE,SAAS,CAACC,MAAM,CAAC;AACzD,CAAC,CAAC;AAEF,SAASd,MAAM,CAACe,OAAO,EAAE;EACvB,IAAI,EAAE,IAAI,YAAYf,MAAM,CAAC,EAC3B,OAAO,IAAIA,MAAM,CAACe,OAAO,CAAC;EAE5BL,QAAQ,CAACM,IAAI,CAAC,IAAI,EAAED,OAAO,CAAC;EAC5BJ,QAAQ,CAACK,IAAI,CAAC,IAAI,EAAED,OAAO,CAAC;EAE5B,IAAIA,OAAO,IAAIA,OAAO,CAACE,QAAQ,KAAK,KAAK,EACvC,IAAI,CAACA,QAAQ,GAAG,KAAK;EAEvB,IAAIF,OAAO,IAAIA,OAAO,CAACG,QAAQ,KAAK,KAAK,EACvC,IAAI,CAACA,QAAQ,GAAG,KAAK;EAEvB,IAAI,CAACC,aAAa,GAAG,IAAI;EACzB,IAAIJ,OAAO,IAAIA,OAAO,CAACI,aAAa,KAAK,KAAK,EAC5C,IAAI,CAACA,aAAa,GAAG,KAAK;EAE5B,IAAI,CAACC,IAAI,CAAC,KAAK,EAAEC,KAAK,CAAC;AACzB;;AAEA;AACA,SAASA,KAAK,GAAG;EACf;EACA;EACA,IAAI,IAAI,CAACF,aAAa,IAAI,IAAI,CAACG,cAAc,CAACC,KAAK,EACjD;;EAEF;EACA;EACAC,OAAO,CAACC,QAAQ,CAAC,IAAI,CAACC,GAAG,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC;AAEA,SAASf,OAAO,CAAEgB,EAAE,EAAEC,CAAC,EAAE;EACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGH,EAAE,CAACI,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;IACzCD,CAAC,CAACD,EAAE,CAACE,CAAC,CAAC,EAAEA,CAAC,CAAC;EACb;AACF"},"metadata":{},"sourceType":"script"}